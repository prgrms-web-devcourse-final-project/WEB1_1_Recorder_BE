services:
  mysql:
    image: mysql:8
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: revup
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

  spring-boot-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: eksrhk506/revup:latest
    container_name: spring-boot-container
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_started
      redis_container:
        condition: service_started
    restart: always
    env_file:
      - .env
  redis_container:
    image: redis:latest
    # 컨테이너명
    container_name: redis-container
    # 접근 포트 설정(컨테이너 외부:컨테이너 내부)
    ports:
      - 6379:6379
    # 스토리지 마운트(볼륨) 설정
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    # 컨테이너에 docker label을 이용해서 메타데이터 추가
    labels:
      - "name=redis"
      - "mode=standalone"
    # 컨테이너 종료시 재시작 여부 설정
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server /usr/local/conf/redis.conf
