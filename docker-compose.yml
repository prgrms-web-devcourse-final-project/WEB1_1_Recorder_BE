services:
  mysql:
    image: mysql:8
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: revup
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

  spring-boot-app:
    image: eksrhk506/revup:latest
    container_name: spring-boot-container
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_started
      redis_container:
        condition: service_started

    environment:
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}

      GIT_HUB_PAGES_URL: ${GIT_HUB_PAGES_URL}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION_AUTO: ${AWS_REGION_AUTO}
      AWS_REGION_STATIC: ${AWS_REGION_STATIC}
      AWS_STACK_AUTO: ${AWS_STACK_AUTO}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD }
      REDIS_PORT: ${REDIS_PORT}

      REFRESH_EXPIRATION_TIME: ${REFRESH_EXPIRATION_TIME }}
      REFRESH_KEY: ${{ secrets.REFRESH_KEY }}


      # S3 환경변수
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
      KAKAO_REDIRECT_URL: ${{ secrets.KAKAO_REDIRECT_URL }}
      OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
      OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
      OAUTH_GITHUB_REDIRECT_URI: ${{ secrets.OAUTH_GITHUB_REDIRECT_URI }}

      JWT_KEY: ${{ secrets.JWT_KEY }}
      JWT_ACCESS_EXPIRATION_TIME: ${{ secrets.JWT_ACCESS_EXPIRATION_TIME }}
      JWT_REFRESH_EXPIRATION_TIME: ${{ secrets.JWT_REFRESH_EXPIRATION_TIME }}

  redis_container:
    image: redis:latest
    # 컨테이너명
    container_name: redis-container
    # 접근 포트 설정(컨테이너 외부:컨테이너 내부)
    ports:
      - 6379:6379
    # 스토리지 마운트(볼륨) 설정
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    # 컨테이너에 docker label을 이용해서 메타데이터 추가
    labels:
      - "name=redis"
      - "mode=standalone"
    # 컨테이너 종료시 재시작 여부 설정
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server /usr/local/conf/redis.conf
